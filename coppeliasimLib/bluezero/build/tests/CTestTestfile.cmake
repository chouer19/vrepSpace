# CMake generated Testfile for 
# Source directory: /home/chouer/workspace/vrep/coppeliasim/programming/bluezero/tests
# Build directory: /home/chouer/workspace/vrep/coppeliasim/programming/bluezero/build/tests
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
add_test(pubsub "pubsub" "0")
add_test(pubsub_with_compression "pubsub" "1")
add_test(pubsub_slowsub_conflate_0 "pubsub_slowsub_conflate" "0")
add_test(pubsub_slowsub_conflate_1 "pubsub_slowsub_conflate" "1")
add_test(pubsub_slowsub_conflate_zmq_0 "pubsub_slowsub_conflate_zmq" "0")
add_test(pubsub_slowsub_conflate_zmq_1 "pubsub_slowsub_conflate_zmq" "1")
add_test(pubsub2 "pubsub2")
add_test(pubsub_unmanaged "pubsub_unmanaged")
add_test(pubsub_raw "pubsub_raw")
add_test(pubsub_many "pubsub_many")
add_test(pubsub_poll "pubsub_poll")
add_test(clisrv "clisrv")
add_test(clisrv2 "clisrv2")
add_test(clisrv_raw "clisrv_raw")
add_test(clisrv_badname "clisrv_badname")
add_test(clisrv_retry "clisrv_retry")
add_test(time_sync_offset_recover "time_sync_offset_recover")
add_test(time_sync_clock_tracking_1 "time_sync_clock_tracking" "0.5" "0.6" "1")
add_test(time_sync_clock_tracking_2 "time_sync_clock_tracking" "0.5" "1.5" "1")
add_test(time_sync_clock_tracking_3 "time_sync_clock_tracking" "0.5" "1.66" "0")
add_test(effective_spin_rate "effective_spin_rate")
add_test(compress-zlib "compress" "zlib")
add_test(compress-lz4 "compress" "lz4")
add_test(announce_timeout "announce_timeout" "1000" "1")
add_test(announce_notimeout "announce_timeout" "--timeout=-1" "-e0")
add_test(two_nodes_one_thread "two_nodes_one_thread")
add_test(check_resolver_status_when_not_running "check_resolver_status" "0")
add_test(check_resolver_status_when_running "check_resolver_status" "1")
add_test(protocol "protocol")
add_test(json "json")
add_test(args "args_parse" "-a" "1" "-a" "2" "-a" "3" "-b" "0.5" "-c" "281474976710656" "-n" "4" "w" "x" "y" "z")
add_test(multi_resolver "multi_resolver")
add_test(many_nodes "many_nodes")
add_test(resolver_shutdown "resolver_shutdown")
